---
#### Ansible role options ####
nautobot_uwsgi_mode: socket
nautobot_uwsgi_host: 127.0.0.1
nautobot_uwsgi_port: 8001

#### Nautobot configuration ####

# The installation directory for nautobot
nautobot_root: /opt/nautobot

# System username for Nautobot process
nautobot_system_user: nautobot

### Required settings ###

# This is a list of valid fully-qualified domain names (FQDNs) for the Nautobot server.
# Nautobot will not permit write access to the server via any other hostnames. The
# first FQDN in the list will be treated as the preferred name
nautobot_allowed_hosts:
  - '*'

# PostgreSQL database configuration. See the Django documentation for a complete list
# of available parameters:
# https://docs.djangoproject.com/en/stable/ref/settings/#databases
nautobot_db_name: nautobot        # Database name
nautobot_db_host: localhost       # Database server
nautobot_db_port: ''              # Database port (leave blank for default)
nautobot_db_username: nautobot    # PostgreSQL username
nautobot_db_password: nautobot    # PostgreSQL password
nautobot_db_conn_age: 300         # Max database connection age
nautobot_db_locale: en_US.UTF-8   # Database locale

# Redis configuration
nautobot_redis_ssl: False
nautobot_redis_user: ''
nautobot_redis_password: ''
nautobot_redis_host: localhost
nautobot_redis_port: 6379

# This key is used for secure generation of random numbers and strings. It must never
# be exposed outside of this file. For optimal security, SECRET_KEY should be at least
# 50 characters in length and contain a mix of letters, numbers, and symbols. Nautobot
# will not run without this defined. For more information, see
# https://docs.djangoproject.com/en/stable/ref/settings/#std:setting-SECRET_KEY
# Below is a default ONLY. CONFIGURE DIFFERENTLY VIA HOST VARIABLE
nautobot_secret_key: "e!69mpi2d04#gmv+)&!ws(_3+0yp9a-n*62_7wxak_7#253tac"

### Optional settings ###

# Specify one or more name and email address tuples representing Nautobot
# administrators. These people will be notified of application errors (assuming correct
# email settings are provided).
nautobot_admins: []
# nautobot_admins:
#   - ['John Doe', 'jdoe@example.com']

# URL schemes that are allowed within links in Nautobot
nautobot_allowed_url_schemes:
  - file
  - ftp
  - ftps
  - http
  - https
  - irc
  - mailto
  - sftp
  - ssh
  - tel
  - telnet
  - tftp
  - vnc
  - xmpp

# Optionally display a persistent banner at the top and/or bottom of every page.
# HTML is allowed. To display the same content in both banners, define
# BANNER_TOP and set BANNER_BOTTOM = BANNER_TOP.
nautobot_banner:
  top:
  bottom:

# Text to include on the login page above the login form. HTML is allowed.
nautobot_banner_login:

# Set to False to disable caching with cacheops. (Default: True)
nautobot_cacheops_enabled: True

# Cache timeout in seconds. Cannot be 0. Defaults to 900 (15 minutes).
# To disable caching, set CACHEOPS_ENABLED to False
nautobot_cacheops_timeout: 900

# Maximum number of days to retain logged changes. Set to 0 to retain changes
# indefinitely. (Default: 90)
nautobot_changelog_retention: 90

# If True, all origins will be allowed. Other settings restricting allowed origins will
# be ignored. Defaults to False. Setting this to True can be dangerous, as it allows
# any website to make cross-origin requests to yours. Generally you'll want to restrict
# the list of allowed origins with CORS_ALLOWED_ORIGINS or CORS_ALLOWED_ORIGIN_REGEXES.
nautobot_cors_allow_all_origins: False

# A list of origins that are authorized to make cross-site HTTP requests.
# Defaults to [].
nautobot_cors_allowed_origins: [
  # 'https://hostname.example.com'
]

# A list of strings representing regexes that match Origins that are authorized to make
# cross-site HTTP requests. Defaults to [].
nautobot_cors_allowed_origin_regexes: [
  # r'^(https?://)?(\w+\.)?example\.com$',
]

# FQDNs that are considered trusted origins for secure, cross-domain, requests such as
# HTTPS POST. If running Nautobot under a single domain, you may not need to set this
# variable; if running on multiple domains, you *may* need to set this variable to more
# or less the same as ALLOWED_HOSTS above.
# https://docs.djangoproject.com/en/stable/ref/settings/#csrf-trusted-origins
nautobot_csrf_trusted_origins: [
  # "example.com"
]

# Set to True to enable server debugging. WARNING: Debugging introduces a substantial
# performance penalty and may reveal sensitive information about your installation.
# Only enable debugging while performing testing. Never enable debugging on a
# production system.
nautobot_debug: False

# Enforcement of unique IP space can be toggled on a per-VRF basis. To enforce
# unique IP space within the global table (all prefixes and IP addresses not
# assigned to a VRF), set ENFORCE_GLOBAL_UNIQUE to True.
nautobot_enforce_global_unique: False

# Exempt certain models from the enforcement of view permissions. Models listed here
# will be viewable by all users and by anonymous users. List models in the form
# `<app>.<model>`. Add '*' to this list to exempt all models.
nautobot_exempt_view_permissions: []

# The list of group names to assign a new user account when created using 3rd-party
# authentication.
nautobot_external_auth_default_groups: []

# A mapping of permissions to assign a new user account when created using SSO
# authentication. Each key in the dictionary will be the permmission name specified
# as `<app_label>.<action>_<model>`, and the value should be set to the permission
# contraints, or `None` to allow all objects.
nautobot_external_auth_default_permissions: {}

# If hosting Nautobot in a subdirectory, you must set this value to match the base URL
# prefix configured in your HTTP server (e.g. `/nautobot/`). When not set, URLs will
# default to being prefixed by `/`.
nautobot_force_script_name: None

# When set to `True`, users with limited permissions will only be able to see items in
# the UI they have access too.
nautobot_hide_restricted_ui: False

# HTTP proxies Nautobot should use when sending outbound HTTP requests
# (e.g. for webhooks).
nautobot_http_proxies: {
  #http: "http://10.10.1.10:3128",
  #https: "http://10.10.1.10:3128"
}

# IP addresses recognized as internal to the system. The debugging toolbar will be
# available only to clients accessing Nautobot from an internal IP.
nautobot_internal_ips:
  - "127.0.0.1"
  - "::1"

# Setting this to True will display a "maintenance mode" banner at the top of every page.
nautobot_maintenance_mode: False

# An API consumer can request an arbitrary number of objects =by appending the "limit"
# parameter to the URL (e.g. "?limit=1000"). This setting defines the maximum limit.
# Setting it to 0 or None will allow an API consumer to request all objects by
# specifying "?limit=0".
nautobot_max_page_size: 1000

# The file path where uploaded media such as image attachments are stored. A
# trailing slash is not needed. Note that the default value of this setting is
# derived from the installed location.
#
# nautobot_media_root: /opt/.nautobot/media

# By default uploaded media is stored on the local filesystem. Using
# Django-storages is also supported. Provide the class path of the storage
# driver in STORAGE_BACKEND and any configuration options in STORAGE_CONFIG.
# For example:
#
# nautobot_storage:
#   backend: storages.backends.s3boto3.S3Boto3Storage
#   config:
#     AWS_ACCESS_KEY_ID: Key ID
#     AWS_SECRET_ACCESS_KEY: Secret
#     AWS_STORAGE_BUCKET_NAME: nautobot
#     AWS_S3_REGION_NAME: eu-west-1

# Expose Prometheus monitoring metrics at the HTTP endpoint '/metrics'
nautobot_metrics_enabled: False

# Credentials that Nautobot will uses to authenticate to devices when connecting
# via NAPALM.
nautobot_napalm:
  username: ''
  password: ''
  timeout: 30 # NAPALM timeout (in seconds). (Default: 30)

  # NAPALM optional arguments
  # (see https://napalm.readthedocs.io/en/latest/support/#optional-arguments).
  # Arguments must be provided as a dictionary.
  args: {}

# Determine how many objects to display per page within a list. (Default: 50)
nautobot_paginate_count: 50

# Nautobot plugins. See README.md for plugin configuration details.
nautobot_plugins: []

# When determining the primary IP address for a device, IPv6 is preferred over
# IPv4 by default. Set this to True to prefer IPv4 instead.
nautobot_prefer_ipv4: False

# Rack elevation size defaults, in pixels. For best results, the ratio of width
# to height should be roughly 10:1.
nautobot_rack_elevation_default_unit_height: 22
nautobot_rack_elevation_default_unit_width: 220

# Remote authentication backend support
nautobot_remote_auth:
  header: HTTP_REMOTE_USER
  auto_create_user: False

# This determines how often the GitHub API is called to check the latest release
# of Nautobot. Timeout must be at least 1 hour.
nautobot_release_check:
  timeout: 24 * 3600
  url: None
  # url: https://api.github.com/repos/nautobot/nautobot/releases

# The length of time (in seconds) for which a user will remain logged into the web UI
# before being prompted to re-authenticate. (Default: 1209600 [14 days])
nautobot_session_cookie_age: 1209600

# By default, Nautobot will store session data in the database. Alternatively, a file
# path can be specified here to use local file storage instead. (This can be useful for
# enabling authentication on a standby instance with read-only database access.) Note
# that the user as which Nautobot runs must have read and write permissions to this
# path.
nautobot_session_file_path: None

# Configure SSO, for more information see docs/configuration/authentication/sso.md
nautobot_social_auth_postgres_jsonfield: False

# Time zone (default: UTC)
nautobot_time_zone: UTC

# Date/time formatting. See the following link for supported formats:
# https://docs.djangoproject.com/en/stable/ref/templates/builtins/#date
nautobot_time_format:
  date: N j, Y
  short_date: Y-m-d
  time: g:i a
  short_time: H:i:s
  datetime: N j, Y g:i a
  short_datetime: Y-m-d H:i

# A list of strings designating all applications that are enabled in this Django
# installation. Each string should be a dotted Python path to an application
# configuration class (preferred), or a package containing an application.
# https://nautobot.readthedocs.io/en/latest/configuration/optional-settings/#extra-applications
nautobot_extra_installed_apps: []
